==============================================================
MIGRATION: Add Categories Feature
Date: 2025-10-25
==============================================================

INSTRUKSI:
Jalankan SQL berikut di database gorefill Anda (via phpMyAdmin atau MySQL CLI)

==============================================================
STEP 1: CREATE CATEGORIES TABLE
==============================================================

CREATE TABLE IF NOT EXISTS `categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `slug` varchar(120) NOT NULL,
  `description` text DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `slug` (`slug`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

==============================================================
STEP 2: INSERT DEFAULT CATEGORIES
==============================================================

INSERT INTO `categories` (`id`, `name`, `slug`, `description`) VALUES
(1, 'Air Minum', 'air-minum', 'Produk air minum isi ulang galon dan kemasan'),
(2, 'Gas', 'gas', 'LPG dan tabung gas untuk rumah tangga'),
(3, 'Peralatan', 'peralatan', 'Peralatan dapur dan rumah tangga'),
(4, 'Tinta', 'tinta', 'Tinta printer dan cartridge isi ulang'),
(5, 'Aksesoris', 'aksesoris', 'Aksesoris pendukung produk utama'),
(6, 'Sabun & Detergen', 'sabun-detergen', 'Sabun cair, detergen, dan produk literan pembersih'),
(7, 'Minyak Goreng', 'minyak-goreng', 'Minyak goreng isi ulang dan kemasan');

==============================================================
STEP 3: ADD category_id COLUMN TO products TABLE
==============================================================

ALTER TABLE `products` 
ADD COLUMN `category_id` int(11) DEFAULT NULL AFTER `slug`,
ADD KEY `fk_category` (`category_id`),
ADD CONSTRAINT `fk_products_category` 
  FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) 
  ON DELETE SET NULL ON UPDATE CASCADE;

==============================================================
STEP 4: MIGRATE EXISTING DATA (Map old category string to category_id)
==============================================================

UPDATE `products` SET `category_id` = 1 WHERE `category` = 'Air Minum';
UPDATE `products` SET `category_id` = 2 WHERE `category` = 'Gas';
UPDATE `products` SET `category_id` = 3 WHERE `category` = 'Peralatan';
UPDATE `products` SET `category_id` = 4 WHERE `category` = 'Tinta';
UPDATE `products` SET `category_id` = 5 WHERE `category` = 'Aksesoris';

==============================================================
STEP 5: MAKE category_id NOT NULL (after all data migrated)
==============================================================

-- Cek dulu apakah masih ada produk dengan category_id NULL
SELECT id, name, category FROM products WHERE category_id IS NULL;

-- Jika sudah semua terisi, jalankan:
ALTER TABLE `products` 
MODIFY `category_id` int(11) NOT NULL;

==============================================================
STEP 6: (OPTIONAL) DROP OLD category COLUMN
==============================================================

-- Setelah yakin migration berhasil, bisa drop kolom lama:
-- ALTER TABLE `products` DROP COLUMN `category`;

==============================================================
VERIFICATION
==============================================================

-- Check categories table
SELECT * FROM categories;

-- Check products with categories
SELECT p.id, p.name, c.name as category_name 
FROM products p 
LEFT JOIN categories c ON p.category_id = c.id 
LIMIT 10;

==============================================================
DONE!
==============================================================
